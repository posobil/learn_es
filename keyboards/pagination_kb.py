
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from services.file_handling import get_random_word
from database.database import users_db


def create_menu_button() -> ReplyKeyboardBuilder:
    # –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
    menu_builder: ReplyKeyboardBuilder = ReplyKeyboardBuilder()
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    menu_button = KeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é ‚≠ê')
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä, —É–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ
    # –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 4 –∫–Ω–æ–ø–∫–∏
    menu_builder.row(menu_button)
    return menu_builder.as_markup(resize_keyboard=True)

def create_start_menu_buttons() -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    type_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_words: InlineKeyboardButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–±—É—á–µ–Ω–∏—é üí´',
                                                             callback_data='starting')
    type_builder.row(button_words, width=1)
    return type_builder.as_markup(resize_keyboard=True)

def create_type_buttons() -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    type_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_words: InlineKeyboardButton = InlineKeyboardButton(text='–£—á–∏—Ç—å —Å–ª–æ–≤–∞ üìî',
                                                             callback_data='words')
    button_rules: InlineKeyboardButton = InlineKeyboardButton(text='–£—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ üìù',
                                                             callback_data='rules')
    type_builder.row(button_words, width=1)
    type_builder.row(button_rules, width=1)
    return type_builder.as_markup(resize_keyboard=True)

def create_lists_words_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Å–ª–æ–≤
    lists_words_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_400_words: InlineKeyboardButton = InlineKeyboardButton(text='–¢–æ–ø 400+ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö ü•á',
                                                              callback_data='list400')
    button_100_verb: InlineKeyboardButton = InlineKeyboardButton(text='–¢–æ–ø 100 –≥–ª–∞–≥–æ–ª–æ–≤ üö©',
                                                              callback_data='100verb')
    button_numbers: InlineKeyboardButton = InlineKeyboardButton(text='–¶–∏—Ñ—Ä—ã –∏ —á–∏—Å–ª–∞ 1Ô∏è‚É£2Ô∏è‚É£',
                                                                 callback_data='numbers')
    button_themes: InlineKeyboardButton = InlineKeyboardButton(text='–ü–æ —Ç–µ–º–∞–º üèöüë®‚Äçüë©‚Äçüë¶üçî',
                                                                callback_data='themes')
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    lists_words_builder.row(button_400_words, width=1)
    lists_words_builder.row(button_numbers, width=1)
    lists_words_builder.row(button_100_verb, width=1)
    lists_words_builder.row(button_themes, width=1)
    lists_words_builder.row(back_button, width=1)
    return lists_words_builder.as_markup(resize_keyboard=True)

def create_lists_rules_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–∞–≤–∏–ª
    lists_words_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_ser: InlineKeyboardButton = InlineKeyboardButton(text='–ì–ª–∞–≥–æ–ª SER üï∫',
                                                              callback_data='ser')
    button_estar: InlineKeyboardButton = InlineKeyboardButton(text='–ì–ª–∞–≥–æ–ª ESTAR üíÉ',
                                                              callback_data='estar')
    button_ser_p: InlineKeyboardButton = InlineKeyboardButton(text='–ì–ª–∞–≥–æ–ª SER —Å –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ üßë‚Äçüè´',
                                                                 callback_data='ser_pr')
    button_estar_p: InlineKeyboardButton = InlineKeyboardButton(text='–ì–ª–∞–≥–æ–ª ESTAR —Å –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ üòú',
                                                                callback_data='estar_pr')
    button_r_verbs: InlineKeyboardButton = InlineKeyboardButton(text='–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã üëå',
                                                                callback_data='r_verb')
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    lists_words_builder.row(button_ser, width=1)
    lists_words_builder.row(button_estar, width=1)
    lists_words_builder.row(button_ser_p, width=1)
    lists_words_builder.row(button_estar_p, width=1)
    lists_words_builder.row(button_r_verbs, width=1)
    lists_words_builder.row(back_button, width=1)
    return lists_words_builder.as_markup(resize_keyboard=True)

def create_lists_themes_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    lists_words_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_colors: InlineKeyboardButton = InlineKeyboardButton(text='–¶–≤–µ—Ç–∞ üåà',
                                                              callback_data='colors')
    button_family: InlineKeyboardButton = InlineKeyboardButton(text='–°–µ–º—å—è üë®‚Äçüë©‚Äçüë¶',
                                                              callback_data='family')
    button_emotions: InlineKeyboardButton = InlineKeyboardButton(text='–≠–º–æ—Ü–∏–∏ ü§™',
                                                                 callback_data='emotions')
    button_body: InlineKeyboardButton = InlineKeyboardButton(text='–¢–µ–ª–æ üí™',
                                                                callback_data='body')
    button_face: InlineKeyboardButton = InlineKeyboardButton(text='–õ–∏—Ü–æ üëÑ',
                                                             callback_data='face')
    button_health: InlineKeyboardButton = InlineKeyboardButton(text='–ó–¥–æ—Ä–æ–≤—å–µ üíä',
                                                             callback_data='health')
    button_education: InlineKeyboardButton = InlineKeyboardButton(text='–£—á–µ–±–∞ üìö',
                                                               callback_data='education')
    button_weather: InlineKeyboardButton = InlineKeyboardButton(text='–ü–æ–≥–æ–¥–∞ üå§',
                                                                  callback_data='weather')

    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    lists_words_builder.row(button_colors, button_family, button_emotions, button_body, button_face,
                            button_health, button_education, button_weather,
                            width=2)
    lists_words_builder.row(back_button, width=1)
    return lists_words_builder.as_markup(resize_keyboard=True)

def create_days_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    days_builder.row(*[InlineKeyboardButton(text=f'–ó–∞–Ω—è—Ç–∏–µ {i}', callback_data=f'day_{i}') for i in range(1,6)], width=1)
    days_builder.row(back_button, width=1)
    return days_builder.as_markup(resize_keyboard=True)

def create_400_task_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    tasks_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_esrus : InlineKeyboardButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ Espa√±ol-–†—É—Å—Å–∫–∏–π üá¶üá∑üá∑üá∫',
                                                               callback_data='esp1')
    button_ruses: InlineKeyboardButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ –†—É—Å—Å–∫–∏–π-Espa√±ol üá∑üá∫üá¶üá∑',
                                                              callback_data='rus1')
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    tasks_builder.row(button_esrus, width=1)
    tasks_builder.row(button_ruses, width=1)
    tasks_builder.row(back_button, width=1)
    return tasks_builder.as_markup(resize_keyboard=True)

def create_verb_rules_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    tasks_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_esrus: InlineKeyboardButton = InlineKeyboardButton(text='–í—ã–±–µ—Ä–∏ –≤–µ—Ä–Ω—É—é —Ñ–æ—Ä–º—É –≥–ª–∞–≥–æ–ª–∞ üá¶üá∑',
                                                               callback_data='verbs_t')
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    tasks_builder.row(button_esrus, width=1)
    tasks_builder.row(back_button, width=1)
    return tasks_builder.as_markup(resize_keyboard=True)

def create_r_verb_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    tasks_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_esrus: InlineKeyboardButton = InlineKeyboardButton(text='–í—ã–±–µ—Ä–∏ –≤–µ—Ä–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –≥–ª–∞–≥–æ–ª–∞ üá¶üá∑',
                                                               callback_data='verbs_sk')
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    tasks_builder.row(button_esrus, width=1)
    tasks_builder.row(back_button, width=1)
    return tasks_builder.as_markup(resize_keyboard=True)


def create_task_buttons(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–æ–≤
    tasks_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    button_dict: InlineKeyboardButton = InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ üìÉ',
                                                              callback_data='dict1')
    button_esrus : InlineKeyboardButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ Espa√±ol-–†—É—Å—Å–∫–∏–π üá¶üá∑üá∑üá∫',
                                                               callback_data='esp1')
    button_ruses: InlineKeyboardButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ –†—É—Å—Å–∫–∏–π-Espa√±ol üá∑üá∫üá¶üá∑',
                                                              callback_data='rus1')
    button_estask: InlineKeyboardButton = InlineKeyboardButton(text='–í—ã–±–µ—Ä–∏ —Ñ–æ—Ä–º—É –≥–ª–∞–≥–æ–ª–∞ üá¶üá∑',
                                                              callback_data='task_3')
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    tasks_builder.row(button_dict, width=1)
    tasks_builder.row(button_esrus, width=1)
    tasks_builder.row(button_ruses, width=1)
    tasks_builder.row(button_estask, width=1)
    tasks_builder.row(back_button, width=1)
    return tasks_builder.as_markup(resize_keyboard=True)

def create_answer_buttons(callback: CallbackQuery, ruwords, page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞
    word = ruwords[users_db[callback.from_user.id]['word']]
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    l = get_random_word(word, ruwords)
    days_builder.row(*[InlineKeyboardButton(text=f'{key}', callback_data=f'{value}') for key, value in l.items()], width=1)
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    days_builder.row(back_button, width=1)
    return days_builder.as_markup(resize_keyboard=True)

def create_num_answer_buttons(callback: CallbackQuery, numwords, page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞
    word = numwords[users_db[callback.from_user.id]['word']]
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    l = get_random_num(word, numwords)
    days_builder.row(*[InlineKeyboardButton(text=f'{key}', callback_data=f'{value}') for key, value in l.items()], width=1)
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    days_builder.row(back_button, width=1)
    return days_builder.as_markup(resize_keyboard=True)

def create_back_button(page) -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—é –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    days_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    back_button: InlineKeyboardButton = InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è', callback_data=f'{page}')
    days_builder.row(back_button, width=1)
    return days_builder.as_markup(resize_keyboard=True)





